@import "./vars.scss";

.wheel-wrap {
  $rad-outer: 50%;
  $rad-gap: $rad-outer * 0.7;
  $rad-inner: $rad-outer * 0.68;
  $rad-center: $rad-outer * 0.43;

  display: flex;
  flex-direction: column;
  justify-content: center;
  margin-top: 10px;

  width: 320px;
  height: 320px;

  @media (max-width: 400px) {
    width: 80vw;
    height: 80vw;
  }

  // Wheel
  .wheel {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    margin: auto;

    // Backgrounds
    &-background {
      position: absolute;
      z-index: 1;
      width: 100%;
      height: 100%;
      border-radius: 50%;

      div {
        position: absolute;
        border-radius: 50%;

        &.outer {
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: $K200;
        }
        &.gap {
          top: $rad-outer - $rad-gap;
          left: $rad-outer - $rad-gap;
          width: $rad-gap * 2;
          height: $rad-gap * 2;
          background: $white;
        }
        &.inner {
          top: $rad-outer - $rad-inner;
          left: $rad-outer - $rad-inner;
          width: $rad-inner * 2;
          height: $rad-inner * 2;
          background: $K100;
        }
        &.center {
          top: $rad-outer - $rad-center;
          left: $rad-outer - $rad-center;
          width: $rad-center * 2;
          height: $rad-center * 2;
          background: $white;
        }
      }
    }
  }

  // Rotate
  .wheel-rotate {
    position: absolute;
    z-index: 2;
    display: block;
    width: 100%;
    height: 100%;
  }

  // Outer
  .wheel-outer {
    position: absolute;
    z-index: 2;
    display: block;
    width: 100%;
    height: 100%;

    // Notes
    .note {
      $note-width: $rad-outer - $rad-gap;
      position: absolute;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      width: $note-width;
      height: $rad-outer;
      left: 50 - $note-width / 2;

      transform-origin: 50% 100%;

      @for $i from 1 through 12 {
        &:nth-child(#{$i}) {
          // transform: translate(($rad-outer - ($rad-outer - $rad-gap)/2), 0)            rotate(#{30 * $i - 30}deg);
          transform: rotate(#{30 * $i - 30}deg);
        }
      }

      &-btn {
        cursor: pointer;
        transition: 0.3s ease color;
        user-select: none;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;

        font-family: $headingFont;
        color: $K450;
        font-weight: 600;

        &.major {
          height: ($rad-outer - $rad-gap) * 2;
          font-size: 32px;
        }
        &.minor {
          margin-top: ($rad-gap - $rad-inner) * 2;
          height: ($rad-inner - $rad-center) * 2;
          font-size: 22px;
        }

        @media (max-width: 400px) {
          &.major {
            font-size: 8vw;
          }
          &.minor {
            font-size: 5vw;
          }
        }

        span:not(:first-child) {
          padding-top: 0;
          font-size: 60%;
        }

        &.current {
          color: $key-color;
        }
        &:hover {
          color: $key-color-hover;
        }
      }
    }
  }
}
