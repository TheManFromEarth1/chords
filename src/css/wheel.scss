@import "./vars.scss";
@import "./math.scss";

@mixin spokes($rad, $size, $item) {
  .#{$item} {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    width: $size;
    height: $size;

    margin: (-$size/2) 0 0 (-$size/2);

    font-family: $headingFont;
    font-weight: 600;
    color: $K800;

    @for $i from 0 through 11 {
      &-#{$i} {
        top: percentage(0.5 - ((cos($i * 30deg)) * $rad));
        left: percentage(0.5 + ((sin($i * 30deg)) * $rad));
      }
    }
  }
}

$wheel-width: 320px;
$wheel-breakpoint: $wheel-width + $layout-side-padding * 2;
$wheel-width-mobile: calc(100vw - #{$layout-side-padding * 2});

// Wheel wrap (overflow allowed for box-shadow
.wheel-wrap {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin-top: 10px;

  width: $wheel-width;
  height: $wheel-width;

  @media (max-width: $wheel-breakpoint) {
    width: $wheel-width-mobile;
    height: $wheel-width-mobile;
  }

  // Background
  .wheel-background {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    border-radius: 50%;
    background: $K200;
    box-shadow: 1px 2px 8px rgba($K500, 0.1), 2px 4px 28px rgba($K400, 0.1);

    &:before {
      $rad: 32%;
      content: "";
      position: absolute;
      top: 50 - $rad;
      left: 50 - $rad;
      width: $rad * 2;
      height: $rad * 2;

      border-radius: 50%;
      background: white;
      box-shadow: inset 1px 2px 8px rgba($K500, 0.1),
        inset 2px 4px 28px rgba($K400, 0.1);
    }
  }
}

// Wheel itself (overflow: hidden)
.wheel {
  position: relative;
  z-index: 2;
  width: 100%;
  height: 100%;
  overflow: hidden;

  @media (max-width: $wheel-breakpoint) {
    width: $wheel-width-mobile;
    height: $wheel-width-mobile;
  }

  // Notes
  @include spokes(0.41, 60px, "note");
  .note {
    user-select: none;
    z-index: 4;
    transition: 0.2s ease color;
    cursor: pointer;

    span {
      display: flex;
      flex-direction: row;

      font-size: 26px;

      span:nth-child(2) {
        font-size: 16px;
      }

      @media (max-width: $wheel-breakpoint) {
        font-size: 7.5vw;

        span:nth-child(2) {
          font-size: 5vw;
        }
      }

      &.flat span:nth-child(2) {
        margin-top: 11px;
      }
      &.sharp span:nth-child(2) {
        margin-top: 4px;
      }
    }

    color: $K550;

    &.in-key {
      color: $K800;
    }
    // &.current {
    // color: $key-color;
    // color: white;
    // }
    &:hover {
      color: $key-color-hover;
    }
  }

  // Grades
  @include spokes(0.265, 40px, "grade");
  .grade {
    user-select: none;
    z-index: 3;
    font-size: 16px;

    @media (max-width: $wheel-breakpoint) {
      font-size: 5vw;
    }
  }

  // Spokes
  .spoke {
    pointer-events: none;
    position: absolute;
    z-index: 2;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    &-none {
      z-index: 1;
    }

    svg {
      width: 100%;
      height: 100%;

      path {
        stroke: $K400;
        stroke-width: 1px;
      }

      .outer {
        fill: white;
        //     stroke: $K350;
      }
      .inner {
        fill: $K100;
      }
    }

    // No grade
    &-none path {
      &.outer {
        fill: $K200;
      }
      &.inner {
        display: none;
      }
    }

    // Current
    &-current.spoke-major path.outer {
      fill: $major-color;
      stroke: darken($major-color, 15%);
    }
    &-current.spoke-minor path.outer {
      fill: $minor-color;
    }
    &-current.spoke-diminished path.outer {
      fill: $diminished-color;
    }
    &-current.spoke-augmented path.outer {
      fill: $augmented-color;
    }

    // Chord Type
    &-major path.inner {
      fill: $major-color;
      stroke: darken($major-color, 15%);
    }
    &-minor path.inner {
      fill: $minor-color;
      stroke: darken($minor-color, 15%);
    }
    &-diminished path.inner {
      fill: $diminished-color;
      stroke: darken($diminished-color, 15%);
    }
    &-augmented path.inner {
      fill: $augmented-color;
      stroke: darken($augmented-color, 15%);
    }
  }

  // Don't show additional info
  &:not(.theme-key) {
    .grade {
      opacity: 0.5;
    }
    .spoke svg path.inner {
      opacity: 0.5;
    }
  }
}
